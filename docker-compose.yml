services:
  broker:
    image: apache/kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093,DOCKER://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:29092,DOCKER://broker:29092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9092" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  prototype:
    container_name: prototype
    build: .
    ports:
      - "8080:8080"
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=broker:29092
    depends_on:
      broker:
        condition: service_healthy
    command: java -jar app.jar

  test:
    build:
      context: .
      target: builder
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=broker:29092
    depends_on:
      broker:
        condition: service_healthy
    command: mvn test